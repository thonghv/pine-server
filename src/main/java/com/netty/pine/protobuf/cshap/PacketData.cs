// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PacketData.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from protos/PacketData.proto</summary>
public static partial class PacketDataReflection {

  #region Descriptor
  /// <summary>File descriptor for protos/PacketData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PacketDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chdwcm90b3MvUGFja2V0RGF0YS5wcm90byJOCgpQYWNrZXREYXRhEgsKA2Nt",
          "ZBgBIAEoBRILCgNtc2cYAiABKAkSFAoMcmVzdWx0U3RhdHVzGAMgASgFEhAK",
          "CHBhY2tldElkGAQgASgFQhFCD1BhY2tldERhdGFQcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketData), global::PacketData.Parser, new[]{ "Cmd", "Msg", "ResultStatus", "PacketId" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PacketData : pb::IMessage<PacketData> {
  private static readonly pb::MessageParser<PacketData> _parser = new pb::MessageParser<PacketData>(() => new PacketData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketData(PacketData other) : this() {
    cmd_ = other.cmd_;
    msg_ = other.msg_;
    resultStatus_ = other.resultStatus_;
    packetId_ = other.packetId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketData Clone() {
    return new PacketData(this);
  }

  /// <summary>Field number for the "cmd" field.</summary>
  public const int CmdFieldNumber = 1;
  private int cmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cmd {
    get { return cmd_; }
    set {
      cmd_ = value;
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 2;
  private string msg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "resultStatus" field.</summary>
  public const int ResultStatusFieldNumber = 3;
  private int resultStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResultStatus {
    get { return resultStatus_; }
    set {
      resultStatus_ = value;
    }
  }

  /// <summary>Field number for the "packetId" field.</summary>
  public const int PacketIdFieldNumber = 4;
  private int packetId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PacketId {
    get { return packetId_; }
    set {
      packetId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cmd != other.Cmd) return false;
    if (Msg != other.Msg) return false;
    if (ResultStatus != other.ResultStatus) return false;
    if (PacketId != other.PacketId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cmd != 0) hash ^= Cmd.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    if (ResultStatus != 0) hash ^= ResultStatus.GetHashCode();
    if (PacketId != 0) hash ^= PacketId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cmd != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cmd);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
    if (ResultStatus != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ResultStatus);
    }
    if (PacketId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(PacketId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cmd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
    }
    if (ResultStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultStatus);
    }
    if (PacketId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PacketId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketData other) {
    if (other == null) {
      return;
    }
    if (other.Cmd != 0) {
      Cmd = other.Cmd;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
    if (other.ResultStatus != 0) {
      ResultStatus = other.ResultStatus;
    }
    if (other.PacketId != 0) {
      PacketId = other.PacketId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Cmd = input.ReadInt32();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
        case 24: {
          ResultStatus = input.ReadInt32();
          break;
        }
        case 32: {
          PacketId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
